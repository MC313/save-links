{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Websocket API for publishing and recieving scheduled reminder notifications.",
    "Parameters": {
        "env": {
            "Type": "String"
        },
        "functionOnConnectWebsocketLambdaArn": {
            "Type": "String"
        },
        "functionOnConnectWebsocketLambdaName": {
            "Type": "String"
        },
        "functionOnDisconnectWebsocketLambdaArn": {
            "Type": "String"
        },
        "functionOnDisconnectWebsocketLambdaName": {
            "Type": "String"
        },
        "LinksLockerWebsocketApiName": {
            "Type": "String",
            "Default": "LinksLockerWebsocketAPI"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "LinksLockerWebsocketAPI": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "Name": {
                    "Ref": "LinksLockerWebsocketApiName"
                },
                "ProtocolType": "WEBSOCKET",
                "RouteSelectionExpression": "$request.body.action"
            }
        },
        "ConnectIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "Description": "Connect Integration",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionOnConnectWebsocketLambdaArn}/invocations"
                }
            }
        },
        "ConnectRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "AuthorizationType": "NONE",
                "OperationName": "ConnectRoute",
                "RouteKey": "$connect",
                "RouteResponseSelectionExpression": "$default",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "ConnectIntegration"
                            }
                        ]
                    ]
                }
            }
        },
        "OnConnectWebsocketLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "functionOnConnectWebsocketLambdaName"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LinksLockerWebsocketAPI}/${Stage}/$connect"
                }
            }
        },
        "DisconnectIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "Description": "Disconnect Integration",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionOnDisconnectWebsocketLambdaArn}/invocations"
                }
            }
        },
        "DisconnectRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "RouteKey": "$disconnect",
                "AuthorizationType": "NONE",
                "OperationName": "DisconnectRoute",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "DisconnectIntegration"
                            }
                        ]
                    ]
                }
            }
        },
        "SendNotificationIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "Description": "Send Integration",
                "IntegrationType": "MOCK",
                "RequestTemplates": {
                    "200": "{\"statusCode\" : 200}",
                    "TemplateSelectionExpression": "200"
                }
            }
        },
        "SendNotificationIntegrationResponse": {
            "Type": "AWS::ApiGatewayV2::IntegrationResponse",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "IntegrationId": {
                    "Ref": "SendNotificationIntegration"
                },
                "IntegrationResponseKey": "$default",
                "ResponseTemplates": {
                    "200": "{\"statusCode\" : 200}",
                    "400": "{\"statusCode\" : 400}",
                    "500": "{\"statusCode\" : 500}"
                }
            }
        },
        "SendNotificationRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "RouteKey": "sendnotification",
                "AuthorizationType": "NONE",
                "OperationName": "SendNotificationRoute",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "SendNotificationIntegration"
                            }
                        ]
                    ]
                }
            }
        },
        "SendNotificationRouteResponse": {
            "Type": "AWS::ApiGatewayV2::RouteResponse",
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                },
                "RouteId": {
                    "Ref": "SendNotificationRoute"
                },
                "RouteResponseKey": "$default"
            }
        },
        "functionOnDisconnectWebsocketLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "functionOnDisconnectWebsocketLambdaName"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LinksLockerWebsocketAPI}/${Stage}/$disconnect"
                }
            }
        },
        "LinksLockerWebsocketApiDeployment": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
                "ConnectRoute",
                "DisconnectRoute"
            ],
            "Properties": {
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                }
            }
        },
        "Stage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
                "StageName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        "Prod",
                        {
                            "Ref": "env"
                        }
                    ]
                },
                "DefaultRouteSettings": {
                    "DetailedMetricsEnabled": true,
                    "LoggingLevel": "ERROR",
                    "DataTraceEnabled": true
                },
                "DeploymentId": {
                    "Ref": "LinksLockerWebsocketApiDeployment"
                },
                "ApiId": {
                    "Ref": "LinksLockerWebsocketAPI"
                }
            }
        }
    },
    "Outputs": {
        "ApiId": {
            "Value": {
                "Ref": "LinksLockerWebsocketAPI"
            }
        },
        "ApiName": {
            "Value": {
                "Ref": "LinksLockerWebsocketApiName"
            }
        },
        "WebSocketURI": {
            "Description": "The WSS Protocol URI to connect to",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "wss://",
                        {
                            "Ref": "LinksLockerWebsocketAPI"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".amazonaws.com/",
                        {
                            "Ref": "Stage"
                        }
                    ]
                ]
            }
        },
        "WebSocketConnectionURL": {
            "Value": {
                "Fn::Sub": "https://${LinksLockerWebsocketAPI}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/@connections"
            }
        }
    }
}